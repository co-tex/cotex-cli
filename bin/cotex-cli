#!/usr/bin/env node

const cotex = require('../lib/cotex.js');
const pkg = require('../package.json');
const log = require('npmlog');
const nopt = require('nopt');
const help = require('../lib/help.js');
const osenv = require('osenv');
const fs = require('fs');

const parsed = nopt({
    'json': [Boolean]
}, {'j': '--json'}, process.argv, 2);

const home = osenv.home();
parsed.cotexconf = home + '/' + '.cotexrc';

if (!fs.existsSync(parsed.cotexconf)) {
  fs.writeFileSync(parsed.cotexconf, '');
}


const cmd = parsed.argv.remain.shift();

cotex.load(parsed).then(() => {

    if (!cotex.cli[cmd]) {
        return help.cli();
    }
    
    cotex.cli[cmd]
        .apply(null, parsed.argv.remain)
        .catch(errorHandler);

}).catch(errorHandler);

function errorHandler (err) {
    if (!err) {
        process.exit(1);
    }
 
    if (err.type === 'EUSAGE') {
        err.message && log.error(err.message);
        process.exit(1);
    }
    
    err.message && log.error(err.message);

    if (err.stack) {
        log.error('', err.stack);
        log.error('', '');
        log.error('', '');
        log.error('', 'cotex:', pkg.version, 'node:', process.version);
        log.error('', 'please open an issue including this log on ' + pkg.bugs.url);
    }
  
    process.exit(1);
}